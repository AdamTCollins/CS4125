@startuml
actor User as U
participant ClassifierFacade as CF
participant Publisher as P
participant ClassifierFactory as Factory
participant ModelContext as Context
participant Data as D
participant Translator as T
participant ExportFactory as EF
participant Exporter as E

U -> CF: Initialize ClassifierFacade
CF -> P: Initialize Publisher
CF -> P: Register ConsoleLogger

U -> CF: Load Data
CF -> D: Load dataset from CSV
CF -> T: Translate non-English text
CF -> D: Split and preprocess data
CF -> P: Notify event "data_loaded"

U -> CF: Choose model and export format
CF -> Factory: Get classifier instance
Factory -> Context: Initialize ModelContext with strategy

U -> CF: Train model
CF -> Context: Train model using data
Context -> D: Access training data
CF -> P: Notify event "training"

U -> CF: Make predictions
CF -> Context: Predict using model
Context -> D: Access test data
CF -> P: Notify event "classification"

U -> CF: Evaluate model
CF -> Context: Evaluate model
Context -> D: Access test labels
CF -> P: Notify event "evaluation"

U -> CF: Export results
CF -> EF: Get exporter instance
EF -> E: Instantiate exporter
CF -> E: Export results

U -> CF: Classify new email
CF -> T: Translate user email (if needed)
CF -> Context: Predict for user input
Context -> D: Preprocess and embed email content
CF -> U: Return classification result

@enduml
